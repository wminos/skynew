@page
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Configuration
@using System.Collections
@using System.Net.Http
@model IndexModel
@inject IWebHostEnvironment HostEnv
@inject IConfiguration Configuration
@inject IHttpClientFactory HttpClientFactory

@{
    ViewData["Title"] = "Home page";
    var apiEndpoint = Configuration["API_ENDPOINT"];
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div class="text-left">
    <ul>
        <li>HostEnv:EnvironmentName: @HostEnv.EnvironmentName</li>
        <li>ENV:ASPNETCORE_ENVIRONMENT: @Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT")</li>
        <li>Configuration:ASPNETCORE_ENVIRONMENT: @Configuration["ASPNETCORE_ENVIRONMENT"]</li>
    </ul>

    <div class="col-md-12">
        <h2>Configurations</h2>
        <ul>
            @foreach (var (key, value) in Configuration.AsEnumerable())
            {
                <li>@key: @value</li>
            }
        </ul>
    </div>

    <div class="col-md-12">
        <h2>OS Env</h2>
        <ul>
            @foreach (DictionaryEntry kv in new SortedList(Environment.GetEnvironmentVariables()))
            {
                <li>@kv.Key: @kv.Value</li>
            }
        </ul>
    </div>
    
    <div class="col-md-12">
        <h2>API Test: @apiEndpoint</h2>
        <ul>
            @{
                string text;
                try
                {
                    var client = HttpClientFactory.CreateClient();
                    var response = await client.GetAsync(apiEndpoint);
                    text = await response.Content.ReadAsStringAsync();
                }
                catch (Exception)
                {
                    text = $"error: endpoint={apiEndpoint}";
                }
            }
            <li>@text</li>
        </ul>
    </div>
</div>
